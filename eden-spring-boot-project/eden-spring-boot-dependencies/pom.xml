<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <artifactId>eden-spring-boot-dependencies</artifactId>
    <packaging>pom</packaging>
    <name>eden-spring-boot-dependencies</name>
    <description>Eden* Spring Boot Dependencies</description>

    <parent>
        <groupId>org.ylzl</groupId>
        <artifactId>eden-spring-boot-project</artifactId>
        <version>1.0.0.RELEASE</version>
        <relativePath>..</relativePath>
    </parent>

    <properties>
        <!-- 第三方插件 -->
        <asciidoctor.generated.directory>${project.build.directory}/asciidoc/generated</asciidoctor.generated.directory>
        <asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
        <asciidoctor.input.directory>${project.basedir}/src/docs/asciidoc</asciidoctor.input.directory>
        <asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf</asciidoctor.pdf.output.directory>
        <asciidoctor-maven-plugin.version>2.0.0</asciidoctor-maven-plugin.version>
        <asciidoctorj-diagram.version>1.5.18</asciidoctorj-diagram.version>
        <asciidoctorj-pdf.version>1.5.0-alpha.10.1</asciidoctorj-pdf.version>
        <dependency-check-maven.version>3.3.1</dependency-check-maven.version>
        <dockerfile-maven-plugin.version>1.4.3</dockerfile-maven-plugin.version>
        <frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
        <gatling.configFolder>${project.basedir}/src/test/gatling/conf</gatling.configFolder>
        <gatling-maven-plugin.version>3.0.3</gatling-maven-plugin.version>
        <graphvizDot/>
        <jacoco.reportFolder>${project.build.directory}/jacoco</jacoco.reportFolder>
        <jacoco.utReportFile>${jacoco.reportFolder}/test.exec</jacoco.utReportFile>
        <jacoco.itReportFile>${jacoco.reportFolder}/integrationTest.exec</jacoco.itReportFile>
        <jacoco-maven-plugin.version>0.8.1</jacoco-maven-plugin.version>
        <jib-maven-plugin.version>0.9.11</jib-maven-plugin.version>
        <jruby-complete.version>1.7.26</jruby-complete.version>
        <junit.utReportFolder>${project.testresult.directory}/test</junit.utReportFolder>
        <junit.itReportFolder>${project.testresult.directory}/integrationTest</junit.itReportFolder>
        <liquibase-maven-plugin.version>3.5.5</liquibase-maven-plugin.version>
        <liquibase-maven-plugin.domain/>
        <liquibase-hibernate4.version>3.6</liquibase-hibernate4.version>
        <maven.version>3.0.0</maven.version>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <maven-assembly-plugin.version>3.2.0</maven-assembly-plugin.version>
        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M1</maven-enforcer-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M3</maven-failsafe-plugin.version>
        <maven-idea-plugin.version>2.2.1</maven-idea-plugin.version>
        <maven-jar-plugin.version>3.1.0</maven-jar-plugin.version>
        <maven-javadoc-plugin.version>3.1.0</maven-javadoc-plugin.version>
        <maven-project-info-reports-plugin.version>3.0.0</maven-project-info-reports-plugin.version>
        <maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
        <maven-site-plugin.version>3.8.2</maven-site-plugin.version>
        <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
        <maven-war-plugin.version>3.0.0</maven-war-plugin.version>
        <node.version>v8.11.3</node.version>
        <openapi-generator-maven-plugin.version>3.0.1</openapi-generator-maven-plugin.version>
        <plantuml.home/>
        <plantuml.version>8059</plantuml.version>
        <plantuml-generator-maven-plugin.version>0.9.1</plantuml-generator-maven-plugin.version>
        <plantuml-maven-plugin.version>1.2</plantuml-maven-plugin.version>
        <plantuml.output.directory>${project.build.directory}/plantuml</plantuml.output.directory>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
        <properties-maven-plugin>1.0.0</properties-maven-plugin>
        <scala-maven-plugin.version>3.4.6</scala-maven-plugin.version>
        <server.url/>
        <simulationClass/>
        <sonar.exclusions>src/main/webapp/content/**/*.*, src/main/webapp/i18n/*.js, target/classes/static/**/*.*, target/classes/static/**/*.*
        </sonar.exclusions>
        <sonar.host.url>http://localhost:9000</sonar.host.url>
        <sonar.issue.ignore.multicriteria>S3437,S4684,UndocumentedApi,BoldAndItalicTagsCheck</sonar.issue.ignore.multicriteria>
        <sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.resourceKey>src/main/webapp/app/**/*.*</sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.resourceKey>
        <sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.ruleKey>Web:BoldAndItalicTagsCheck</sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.ruleKey>
        <sonar.issue.ignore.multicriteria.S3437.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.S3437.resourceKey>
        <sonar.issue.ignore.multicriteria.S3437.ruleKey>squid:S3437</sonar.issue.ignore.multicriteria.S3437.ruleKey>
        <sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey>
        <sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey>squid:UndocumentedApi</sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey>
        <sonar.issue.ignore.multicriteria.S4684.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.S4684.resourceKey>
        <sonar.issue.ignore.multicriteria.S4684.ruleKey>squid:S4684</sonar.issue.ignore.multicriteria.S4684.ruleKey>
        <sonar.jacoco.reportPaths>${project.build.directory}/jacoco/test.exec,${project.build.directory}/jacoco/integrationTest.exec</sonar.jacoco.reportPaths>
        <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
        <sonar.junit.reportPaths>${project.build.directory}/test-results/test,${project.build.directory}/test-results/integrationTest</sonar.junit.reportPaths>
        <sonar-maven-plugin.version>3.4.1.1168</sonar-maven-plugin.version>
        <sonar.projectKey>${project.name}</sonar.projectKey>
        <sonar.projectName>${project.description}</sonar.projectName>
        <sonar.projectVersion>${project.version}</sonar.projectVersion>
        <sonar.sources>src/main/</sonar.sources>
        <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
        <sonar.testExecutionReportPaths>${project.build.directory}/test-results/jest/TESTS-results-sonar.xml</sonar.testExecutionReportPaths>
        <sonar.tests>src/test/</sonar.tests>
        <sonar.typescript.lcov.reportPaths>${project.build.directory}/test-results/lcov.info</sonar.typescript.lcov.reportPaths>
        <spring.datasource.driver/>
        <spring.datasource.url/>
        <spring.datasource.username/>
        <spring.datasource.password/>
        <spring.jpa.database-platform/>
        <spring.jpa.naming.physical-strategy/>
        <spring.jpa.naming.implicit-strategy/>
        <spring.profiles.active/>
        <spring-boot.version>1.4.7.RELEASE</spring-boot.version>
        <start-class/>
        <swagger2markup.version>1.3.7</swagger2markup.version>
        <swagger2markup-extensions.version>1.3.3</swagger2markup-extensions.version>
        <swagger.input>${server.url}/v2/api-docs</swagger.input>
        <swagger.output.dir>${project.build.directory}/swagger</swagger.output.dir>
        <swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets</swagger.snippetOutput.dir>
        <timestamp>${maven.build.timestamp}</timestamp>
        <validation-api.version>1.1.0.Final</validation-api.version>
        <wrapper-maven-plugin.version>0.0.5</wrapper-maven-plugin.version>
        <yaml-properties-maven-plugin.version>1.1.3</yaml-properties-maven-plugin.version>
        <yarn.version>v1.9.2</yarn.version>

        <!-- 第三方依赖 -->
        <asm.version>3.1</asm.version>
        <batik.version>1.7</batik.version>
        <cglib.version>2.2.2</cglib.version>
        <classes12.version>10.2.0.2.0</classes12.version>
        <classmate.version>1.3.3</classmate.version>
        <commons-collections.versionn>3.1</commons-collections.versionn>
        <commons-fileupload.version>1.3.3</commons-fileupload.version>
        <commons-io.version>2.4</commons-io.version>
        <commons-lang3.version>3.1</commons-lang3.version>
        <commons-logging.version>1.1.1</commons-logging.version>
        <commons-net.version>3.3</commons-net.version>
        <cucumber.version>3.0.2</cucumber.version>
        <dbunit.version>2.4.8</dbunit.version>
        <easyexcel.version>2.1.6</easyexcel.version>
        <ehcache.version>2.10.4</ehcache.version>
        <embedded-redis.version>0.7.2</embedded-redis.version>
        <flowable.version>6.2.1</flowable.version>
        <ftpserver.version>1.1.1</ftpserver.version>
        <gatling.version>3.2.1</gatling.version>
        <guava.version>20.0</guava.version>
        <hessian.version>4.0.38</hessian.version>
        <hibernate-commons.version>4.0.5.Final</hibernate-commons.version>
        <hibernate-jpa.version>1.0.0.Final</hibernate-jpa.version>
        <java.version>1.7</java.version>
        <javamelody.version>1.79.0</javamelody.version>
        <javamelody-theme.version>1.0</javamelody-theme.version>
		<javassist.version>3.21.0-GA</javassist.version>
        <javax.ws.rs.version>2.0</javax.ws.rs.version>
        <javax-persistence.version>2.1.1</javax-persistence.version>
        <jaxb.version>2.2.11</jaxb.version>
        <jedis.version>2.9.0</jedis.version>
        <jjwt.version>0.10.5</jjwt.version>
        <joda-time.version>2.10.1</joda-time.version>
        <jodconverter.version>4.2.2</jodconverter.version>
        <junit.version>4.12</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <logback-extensions.version>0.1.2</logback-extensions.version>
        <logstash-logback-encoder.version>4.8</logstash-logback-encoder.version>
        <lombok.version>1.18.8</lombok.version>
        <mapper.starter.version>1.2.4</mapper.starter.version>
        <mapstruct.version>1.2.0.Final</mapstruct.version>
        <metrics-spring.version>3.1.3</metrics-spring.version>
        <micrometer.version>1.1.3</micrometer.version>
        <mongobee.version>0.13</mongobee.version>
        <mybatis.version>3.4.6</mybatis.version>
        <mybatis-spring.version>1.3.1</mybatis-spring.version>
        <mybatis-spring-boot.version>1.3.1</mybatis-spring-boot.version>
        <mysql.version>5.1.34</mysql.version>
        <neo4j-ogm.version>2.0.6</neo4j-ogm.version>
		<netty.version>4.1.42.Final</netty.version>
        <json-lib.version>2.4</json-lib.version>
        <oracle.version>11.2.0.4.0</oracle.version>
        <codehaus-jackson.version>1.9.13</codehaus-jackson.version>
        <glassfish-jersey.version>2.20</glassfish-jersey.version>
        <pagehelper.version>5.1.4</pagehelper.version>
        <pagehelper.starter.version>1.2.5</pagehelper.starter.version>
        <prometheus-simpleclient.version>0.4.0</prometheus-simpleclient.version>
        <poi.version>3.17</poi.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <rxnetty.version>0.4.9</rxnetty.version>
        <scala.version>2.12.8</scala.version>
        <spring.profiles.active/>
        <spring-boot-admin.version>1.4.6</spring-boot-admin.version>
        <spring-cloud.version>Camden.RELEASE</spring-cloud.version>
        <spring-cloud-security.version>1.1.1.RELEASE</spring-cloud-security.version>
        <spring-data-commons.version>1.13.6.RELEASE</spring-data-commons.version>
        <spring-data-hadoop.version>2.5.0.RELEASE</spring-data-hadoop.version>
        <spring-data-jpa.version>1.11.6.RELEASE</spring-data-jpa.version>
        <spring-integration.version>4.3.10.RELEASE</spring-integration.version>
        <spring-integration-kafka.version>2.0.1.RELEASE</spring-integration-kafka.version>
        <spring-kafka.version>1.1.1.RELEASE</spring-kafka.version>
        <springfox.version>2.7.0</springfox.version>
        <sqlite.version>3.28.0</sqlite.version>
        <swagger-bootstrap-ui.version>1.8.9</swagger-bootstrap-ui.version>
        <thumbnailator.version>0.4.8</thumbnailator.version>
        <tomcat.version>7.0.90</tomcat.version>
        <truelicense.version>1.33</truelicense.version>
        <zipkin.version>2.12.9</zipkin.version>

        <!-- 自定义依赖 -->
        <eden-spring-boot.version>${project.parent.version}</eden-spring-boot.version>
    </properties>

    <build>
        <defaultGoal>spring-boot:run</defaultGoal>
        <finalName>${project.name}</finalName>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <pluginManagement>
            <!-- 相同的 phase 按引入顺序执行 -->
            <plugins>
                <!-- wrapper-maven-plugin:initalize -->
                <plugin>
                    <groupId>com.rimerosolutions.maven.plugins</groupId>
                    <artifactId>wrapper-maven-plugin</artifactId>
                    <version>${wrapper-maven-plugin.version}</version>
                </plugin>
                <!-- maven-idea-plugin:initalize -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-idea-plugin</artifactId>
                    <version>${maven-idea-plugin.version}</version>
                    <configuration>
                        <exclude>node_modules</exclude>
                    </configuration>
                </plugin>
                <!-- maven-eclipse-plugin:initalize -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>${maven-eclipse-plugin.version}</version>
                    <configuration>
                        <downloadSources>true</downloadSources>
                        <downloadJavadocs>true</downloadJavadocs>
                    </configuration>
                </plugin>
                <!-- maven-enforcer-plugin:validate -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforcer-enforce</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                        <!--<execution>
                            <id>enforce-dependencyConvergence</id>
                            <configuration>
                                <rules>
                                    <DependencyConvergence/>
                                </rules>
                                <fail>false</fail>
                            </configuration>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>-->
                    </executions>
                    <configuration>
                        <rules>
                            <requireMavenVersion>
                                <message>You are running an older version of Maven. Application requires at least Maven ${maven.version}</message>
                                <version>[${maven.version},)</version>
                            </requireMavenVersion>
                            <requireJavaVersion>
                                <message>You are running an incompatible version of Java.Application requires at least JDK ${java.version}</message>
                                <version>[${java.version},13)</version>
                            </requireJavaVersion>
                        </rules>
                    </configuration>
                </plugin>
                <!-- dependency-check-maven:validate -->
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check-maven.version}</version>
                    <executions>
                        <execution>
                            <id>dependency-check</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- maven-resources-plugin:process-resources -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>resources-copy-resources</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>target/classes</outputDirectory>
                                <useDefaultDelimiters>false</useDefaultDelimiters>
                                <delimiters>
                                    <delimiter>#</delimiter>
                                </delimiters>
                                <resources>
                                    <resource>
                                        <directory>src/main/resources</directory>
                                        <filtering>true</filtering>
                                        <includes>
                                            <include>**/*.properties</include>
                                            <exclude>**/*.yml</exclude>
                                        </includes>
                                    </resource>
                                    <resource>
                                        <directory>src/main/resources</directory>
                                        <filtering>false</filtering>
                                        <excludes>
                                            <exclude>**/*.properties</exclude>
                                            <exclude>**/*.yml</exclude>
                                        </excludes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>resources-docker-resources</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>target/</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/main/docker</directory>
                                        <filtering>false</filtering>
                                        <excludes>
                                            <exclude>**/*.yml</exclude>
                                        </excludes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- yaml-properties-maven-plugin:process-resources -->
                <plugin>
                    <groupId>it.ozimov</groupId>
                    <artifactId>yaml-properties-maven-plugin</artifactId>
                    <version>${yaml-properties-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>yaml-read-project-properties</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>read-project-properties</goal>
                            </goals>
                            <configuration>
                                <files>
                                    <file>${project.build.outputDirectory}/config/application-${spring.profiles.active}.yml</file>
                                </files>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- properties-maven-plugin:process-resources -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>${properties-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>properties-read-project-properties</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>read-project-properties</goal>
                            </goals>
                            <configuration>
                                <files>
                                    <file>${project.build.outputDirectory}/*.properties</file>
                                </files>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- maven-compiler-plugin:compile -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.hibernate</groupId>
                                <artifactId>hibernate-jpamodelgen</artifactId>
                                <version>${hibernate.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-configuration-processor</artifactId>
                                <version>${spring-boot.version}</version>
                            </path>
                        </annotationProcessorPaths>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <showWarnings>false</showWarnings>
                        <compilerArgs>
                            <arg>-Xlint</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <!-- scala-maven-plugin:testCompile -->
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>${scala-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>scala-testCompile</id>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                            <configuration>
                                <jvmArgs>
                                    <jvmArg>-Xss100M</jvmArg>
                                </jvmArgs>
                                <args>
                                    <arg>-target:jvm-1.8</arg>
                                    <arg>-deprecation</arg>
                                    <arg>-feature</arg>
                                    <arg>-unchecked</arg>
                                    <arg>-language:implicitConversions</arg>
                                    <arg>-language:postfixOps</arg>
                                </args>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- gatling-maven-plugin:test -->
                <plugin>
                    <groupId>io.gatling</groupId>
                    <artifactId>gatling-maven-plugin</artifactId>
                    <version>${gatling-maven-plugin.version}</version>
                    <configuration>
                        <disableCompiler>true</disableCompiler>
                        <propagateSystemProperties>true</propagateSystemProperties>
                        <failOnError>true</failOnError>
                        <runMultipleSimulations>true</runMultipleSimulations>
                    </configuration>
                </plugin>
                <!-- jacoco-maven-plugin:test&post-integration-test -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>jacoco-prepare-agent</id>
                            <phase>test</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${jacoco.utReportFile}</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>jacoco-report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${jacoco.utReportFile}</dataFile>
                                <outputDirectory>${jacoco.reportFolder}</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>jacoco-prepare-agent-integration</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                            <configuration>
                                <destFile>${jacoco.itReportFile}</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>jacoco-report-integration</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                            <configuration>
                                <dataFile>${jacoco.itReportFile}</dataFile>
                                <outputDirectory>${jacoco.reportFolder}</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- maven-surefire-plugin:test -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <runOrder>alphabetical</runOrder>
                        <reportsDirectory>${junit.utReportFolder}</reportsDirectory>
                        <excludes>
                            <exclude>**/*IT*</exclude>
                            <exclude>**/*IntTest*</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <!-- maven-failsafe-plugin:pre-integration-test&integration-test -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                        <runOrder>alphabetical</runOrder>
                        <reportsDirectory>${junit.itReportFolder}</reportsDirectory>
                        <includes>
                            <include>**/*IT*</include>
                            <include>**/*IntTest*</include>
                        </includes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- sonar-maven-plugin:test -->
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>
                <!-- maven-jar-plugin:package -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>**/rebel.xml</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <!-- maven-war-plugin:package -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <archive>
                            <manifest>
                                <mainClass>${start-class}</mainClass>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                        <packagingExcludes>WEB-INF/lib/*.jar</packagingExcludes>
                    </configuration>
                </plugin>
                <!-- maven-assembly-plugin:package -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                    <configuration>
                        <descriptors>
                            <descriptor>src/main/assembly/assembly.xml</descriptor>
                        </descriptors>
                    </configuration>
                    <executions>
                        <execution>
                            <id>assembly-single</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- spring-boot-maven-plugin:package -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <executable>true</executable>
                        <fork>true</fork>
                        <mainClass>${start-class}</mainClass>
                    </configuration>
                    <executions>
                        <execution>
                            <id>spring-boot-build-repackage</id>
                            <goals>
                                <goal>build-info</goal>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- maven-deploy-plugin:deploy -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                    <configuration>
                        <updateReleaseInfo>true</updateReleaseInfo>
                    </configuration>
                </plugin>
                <!-- jib-maven-plugin:deploy -->
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib-maven-plugin.version}</version>
                    <configuration>
                        <from>
                            <image>openjdk:7-jre-alpine</image>
                        </from>
                        <to>
                            <image>${project.name}:latest</image>
                        </to>
                        <container>
                            <entrypoint>
                                <shell>sh</shell>
                                <option>-c</option>
                                <arg>chmod +x /entrypoint.sh &amp;&amp; sync &amp;&amp; /entrypoint.sh</arg>
                            </entrypoint>
                            <ports>
                                <port>8080</port>
                            </ports>
                            <environment>
                                <SPRING_OUTPUT_ANSI_ENABLED>ALWAYS</SPRING_OUTPUT_ANSI_ENABLED>
                                <RUN_SLEEP>0</RUN_SLEEP>
                            </environment>
                            <useCurrentTimestamp>true</useCurrentTimestamp>
                        </container>
                    </configuration>
                </plugin>
                <!-- dockerfile-maven-plugin:deploy -->
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile-maven-plugin.version}</version>
                    <configuration>
                        <repository>${project.name}</repository>
                        <tag>${project.version}</tag>
                        <contextDirectory>${project.build.directory}</contextDirectory>
                    </configuration>
                </plugin>
                <!-- maven-javadoc-plugin:pre-site -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <source>8</source>
                    </configuration>
                    <executions>
                        <execution>
                            <id>javadoc-jar</id>
                            <phase>pre-site</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- swagger2markup-maven-plugin:pre-site -->
                <plugin>
                    <groupId>io.github.swagger2markup</groupId>
                    <artifactId>swagger2markup-maven-plugin</artifactId>
                    <version>${swagger2markup.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>io.github.swagger2markup</groupId>
                            <artifactId>swagger2markup-import-files-ext</artifactId>
                            <version>${swagger2markup-extensions.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>io.github.swagger2markup</groupId>
                            <artifactId>swagger2markup-spring-restdocs-ext</artifactId>
                            <version>${swagger2markup-extensions.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <swaggerInput>${swagger.input}</swaggerInput>
                        <outputDir>${asciidoctor.generated.directory}</outputDir>
                        <config>
                            <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
                            <swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>
                            <swagger2markup.extensions.dynamicOverview.contentPath>
                                ${project.basedir}/src/docs/asciidoc/extensions/overview
                            </swagger2markup.extensions.dynamicOverview.contentPath>
                            <swagger2markup.extensions.dynamicDefinitions.contentPath>
                                ${project.basedir}/src/docs/asciidoc/extensions/definitions
                            </swagger2markup.extensions.dynamicDefinitions.contentPath>
                            <swagger2markup.extensions.dadmynamicPaths.contentPath>
                                ${project.basedir}/src/docs/asciidoc/extensions/paths
                            </swagger2markup.extensions.dadmynamicPaths.contentPath>
                            <swagger2markup.extensions.dynamicSecurity.contentPath>
                                ${project.basedir}/src/docs/asciidoc/extensions/security
                            </swagger2markup.extensions.dynamicSecurity.contentPath>
                            <swagger2markup.extensions.springRestDocs.snippetBaseUri>${swagger.snippetOutput.dir}
                            </swagger2markup.extensions.springRestDocs.snippetBaseUri>
                            <swagger2markup.extensions.springRestDocs.defaultSnippets>true
                            </swagger2markup.extensions.springRestDocs.defaultSnippets>
                        </config>
                    </configuration>
                    <executions>
                        <execution>
                            <id>swagger2markup-maven-plugin-convertSwagger2markup</id>
                            <phase>pre-site</phase>
                            <goals>
                                <goal>convertSwagger2markup</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- asciidoctor-maven-plugin:pre-site -->
                <plugin>
                    <groupId>org.asciidoctor</groupId>
                    <artifactId>asciidoctor-maven-plugin</artifactId>
                    <version>${asciidoctor-maven-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.asciidoctor</groupId>
                            <artifactId>asciidoctorj-pdf</artifactId>
                            <version>${asciidoctorj-pdf.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.jruby</groupId>
                            <artifactId>jruby-complete</artifactId>
                            <version>${jruby-complete.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
                        <sourceDocumentName>index.adoc</sourceDocumentName>
                        <attributes>
                            <doctype>book</doctype>
                            <toc>left</toc>
                            <toclevels>3</toclevels>
                            <generated>${asciidoctor.generated.directory}</generated>
                        </attributes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>asciidoctor-html-process-asciidoc</id>
                            <phase>pre-site</phase>
                            <goals>
                                <goal>process-asciidoc</goal>
                            </goals>
                            <configuration>
                                <backend>html5</backend>
                                <outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>asciidoctor-pdf-process-asciidoc</id>
                            <phase>pre-site</phase>
                            <goals>
                                <goal>process-asciidoc</goal>
                            </goals>
                            <configuration>
                                <backend>pdf</backend>
                                <outputDirectory>${asciidoctor.pdf.output.directory}</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- liquibase-maven-plugin:pre-site -->
                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <version>${liquibase-maven-plugin.version}</version>
                    <configuration>
                        <changeLogFile>src/main/resources/config/liquibase/master.xml</changeLogFile>
                        <outputChangeLogFile>
                            src/main/resources/config/liquibase/changelog/${maven.build.timestamp}.xml
                        </outputChangeLogFile>
                        <diffChangeLogFile>
                            src/main/resources/config/liquibase/changelog/${maven.build.timestamp}.xml
                        </diffChangeLogFile>
                        <driver>${spring.datasource.driver}</driver>
                        <url>${spring.datasource.url}</url>
                        <username>${spring.datasource.username}</username>
                        <password>${spring.datasource.password}</password>
                        <referenceUrl>
                            hibernate:spring:${liquibase-maven-plugin.domain}?dialect=${spring.jpa.database-platform}&amp;hibernate.physical_naming_strategy=${spring.jpa.naming.physical-strategy}&amp;hibernate.implicit_naming_strategy=${spring.jpa.naming.implicit-strategy}
                        </referenceUrl>
                        <verbose>true</verbose>
                        <logging>debug</logging>
                        <contexts>!test</contexts>
                    </configuration>
                    <executions>
                        <execution>
                            <id>liquibase-dbDoc</id>
                            <phase>pre-site</phase>
                            <goals>
                                <goal>dbDoc</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.javassist</groupId>
                            <artifactId>javassist</artifactId>
                            <version>${javassist.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.liquibase.ext</groupId>
                            <artifactId>liquibase-hibernate4</artifactId>
                            <version>${liquibase-hibernate4.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-starter-data-jpa</artifactId>
                            <version>${spring-boot.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>javax.validation</groupId>
                            <artifactId>validation-api</artifactId>
                            <version>${validation-api.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- plantuml-maven-plugin:pre-site -->
                <plugin>
                    <groupId>com.github.jeluard</groupId>
                    <artifactId>plantuml-maven-plugin</artifactId>
                    <version>${plantuml-maven-plugin.version}</version>
                    <configuration>
                        <graphvizDot>${graphvizDot}</graphvizDot>
                        <sourceFiles>
                            <directory>${plantuml.output.directory}</directory>
                            <includes>
                                <include>**/*.puml</include>
                            </includes>
                        </sourceFiles>
                    </configuration>
                    <executions>
                        <execution>
                            <id>plantuml-generate</id>
                            <phase>pre-site</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>net.sourceforge.plantuml</groupId>
                            <artifactId>plantuml</artifactId>
                            <version>${plantuml.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- plantuml-generator-maven-plugin:pre-site -->
                <plugin>
                    <groupId>de.elnarion.maven</groupId>
                    <artifactId>plantuml-generator-maven-plugin</artifactId>
                    <version>${plantuml-generator-maven-plugin.version}</version>
                </plugin>
                <!-- maven-site-plugin:site -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                </plugin>
                <!-- maven-project-info-reports-plugin:site -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${maven-project-info-reports-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <reporting>
        <plugins>

        </plugins>
    </reporting>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>asm</groupId>
                <artifactId>asm</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.caucho</groupId>
                <artifactId>hessian</artifactId>
                <version>${hessian.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.mongobee</groupId>
                <artifactId>mongobee</artifactId>
                <version>${mongobee.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>swagger-bootstrap-ui</artifactId>
                <version>${swagger-bootstrap-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ryantenney.metrics</groupId>
                <artifactId>metrics-spring</artifactId>
                <version>${metrics-spring.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${commons-net.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui-activiti</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui-hystrix</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui-login</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui-turbine</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.schlichtherle.truelicense</groupId>
                <artifactId>truelicense-core</artifactId>
                <version>${truelicense.version}</version>
            </dependency>
            <dependency>
                <groupId>de.schlichtherle.truelicense</groupId>
                <artifactId>truelicense-xml</artifactId>
                <version>${truelicense.version}</version>
            </dependency>
            <dependency>
                <groupId>de.schlichtherle.truelicense</groupId>
                <artifactId>truelicense-swing</artifactId>
                <version>${truelicense.version}</version>
            </dependency>
            <dependency>
                <groupId>io.gatling</groupId>
                <artifactId>gatling-app</artifactId>
                <version>${gatling.version}</version>
            </dependency>
            <dependency>
                <groupId>io.gatling</groupId>
                <artifactId>gatling-recorder</artifactId>
                <version>${gatling.version}</version>
            </dependency>
            <dependency>
                <groupId>io.gatling.highcharts</groupId>
                <artifactId>gatling-charts-highcharts</artifactId>
                <version>${gatling.version}</version>
            </dependency>
            <dependency>
                <groupId>net.bull.javamelody</groupId>
                <artifactId>javamelody-core</artifactId>
                <version>${javamelody.version}</version>
            </dependency>
            <dependency>
                <groupId>net.bull.javamelody</groupId>
                <artifactId>javamelody-dark-theme</artifactId>
                <version>${javamelody-theme.version}</version>
            </dependency>
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-junit</artifactId>
                <version>${cucumber.version}</version>
            </dependency>
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-spring</artifactId>
                <version>${cucumber.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-annotation</artifactId>
                <version>${dropwizard-metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-json</artifactId>
                <version>${dropwizard-metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-jvm</artifactId>
                <version>${dropwizard-metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-servlet</artifactId>
                <version>${dropwizard-metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-servlets</artifactId>
                <version>${dropwizard-metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>${netty.version}</version>
			</dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient</artifactId>
                <version>${prometheus-simpleclient.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_dropwizard</artifactId>
                <version>${prometheus-simpleclient.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_servlet</artifactId>
                <version>${prometheus-simpleclient.version}</version>
            </dependency>
            <dependency>
                <groupId>io.reactivex</groupId>
                <artifactId>rxnetty</artifactId>
                <version>${rxnetty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-bean-validators</artifactId>
                <version>${springfox.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.mapstruct</groupId>
                        <artifactId>mapstruct</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-autoconfigure-ui</artifactId>
                <version>${zipkin.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-server</artifactId>
                <version>${zipkin.version}</version>
            </dependency>
            <dependency>
                <groupId>it.ozimov</groupId>
                <artifactId>embedded-redis</artifactId>
                <version>${embedded-redis.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>guava</artifactId>
                        <groupId>com.google.guava</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>${javax.ws.rs.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>net.coobird</groupId>
                <artifactId>thumbnailator</artifactId>
                <version>${thumbnailator.version}</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-access</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache</artifactId>
                <version>${ehcache.version}</version>
            </dependency>
            <dependency>
                <groupId>net.sf.json-lib</groupId>
                <artifactId>json-lib</artifactId>
                <version>${json-lib.version}</version>
                <classifier>jdk15</classifier>
            </dependency>
            <dependency>
                <groupId>oracle</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${oracle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ftpserver</groupId>
                <artifactId>ftpserver-core</artifactId>
                <version>${ftpserver.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml-schemas</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>tomcat-juli</artifactId>
                <version>${tomcat.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.xmlgraphics</groupId>
                <artifactId>batik-codec</artifactId>
                <version>${batik.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.xmlgraphics</groupId>
                <artifactId>batik-svg-dom</artifactId>
                <version>${batik.version}</version>
            </dependency>
            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>${dbunit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>javax.persistence</artifactId>
                <version>${javax-persistence.version}</version>
            </dependency>
            <dependency>
                <groupId>org.flowable</groupId>
                <artifactId>flowable-spring-boot-starters</artifactId>
                <version>${flowable.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.flowable</groupId>
                <artifactId>flowable-spring-boot-starter-basic</artifactId>
                <version>${flowable.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-client</artifactId>
                <version>${glassfish-jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-common</artifactId>
                <version>${glassfish-jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-server</artifactId>
                <version>${glassfish-jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.bundles.repackaged</groupId>
                <artifactId>jersey-guava</artifactId>
                <version>${glassfish-jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.common</groupId>
                <artifactId>hibernate-commons-annotations</artifactId>
                <version>${hibernate-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.1-api</artifactId>
                <version>${hibernate-jpa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jodconverter</groupId>
                <artifactId>jodconverter-core</artifactId>
                <version>${jodconverter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jodconverter</groupId>
                <artifactId>jodconverter-local</artifactId>
                <version>${jodconverter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jodconverter</groupId>
                <artifactId>jodconverter-online</artifactId>
                <version>${jodconverter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jodconverter</groupId>
                <artifactId>jodconverter-spring</artifactId>
                <version>${jodconverter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jodconverter</groupId>
                <artifactId>jodconverter-spring-boot-starter</artifactId>
                <version>${jodconverter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.logback-extensions</groupId>
                <artifactId>logback-ext-spring</artifactId>
                <version>${logback-extensions.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.neo4j</groupId>
                <artifactId>neo4j-ogm-core</artifactId>
                <version>${neo4j-ogm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.neo4j</groupId>
                <artifactId>neo4j-ogm-bolt-driver</artifactId>
                <version>${neo4j-ogm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.neo4j</groupId>
                <artifactId>neo4j-ogm-embedded-driver</artifactId>
                <version>${neo4j-ogm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.neo4j</groupId>
                <artifactId>neo4j-ogm-http-driver</artifactId>
                <version>${neo4j-ogm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-security-dependencies</artifactId>
                <version>${spring-cloud-security.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-hadoop</artifactId>
                <version>${spring-data-hadoop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.integration</groupId>
                <artifactId>spring-integration-bom</artifactId>
                <version>${spring-integration.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.integration</groupId>
                <artifactId>spring-integration-kafka</artifactId>
                <version>${spring-integration-kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka-test</artifactId>
                <version>${spring-kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xerial</groupId>
                <artifactId>sqlite-jdbc</artifactId>
                <version>${sqlite.version}</version>
            </dependency>
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>${mapper.starter.version}</version>
            </dependency>

            <!-- 自定义依赖 -->
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-spring-boot-cloud</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-spring-boot-commons</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-spring-boot-data</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-spring-boot-framework</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-spring-boot-integration</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-spring-boot-security</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-spring-boot-support</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-spring-boot-test</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-activemq-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-annotation-processer-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-caffeine-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-canel-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-cloud-admin-client-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-cloud-admin-server-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-cloud-bus-kafka-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-cloud-bus-rabbitmq-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-cloud-config-client-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-cloud-config-server-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-devtools-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-druid-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-dubbo-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-easyexcel-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-ehcache-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-elasticsearch-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-eureka-server-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-eureka-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-feign-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
			<dependency>
				<groupId>org.ylzl</groupId>
				<artifactId>eden-flowable-spring-boot-starter</artifactId>
				<version>${eden-spring-boot.version}</version>
			</dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-flyway-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-ftpserver-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-hazelcast-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-hbase-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-hessian-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-hibernate-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-hikaricp-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-httpclient-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-hystrix-dashboard-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-hystrix-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-infinispan-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
			<dependency>
				<groupId>org.ylzl</groupId>
				<artifactId>eden-javamelody-spring-boot-starter</artifactId>
				<version>${eden-spring-boot.version}</version>
			</dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-jpa-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-jwt-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-kafka-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-liquibase-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-logstash-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-mail-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-memcached-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-metrics-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
			<dependency>
				<groupId>org.ylzl</groupId>
				<artifactId>eden-mina-spring-boot-starter</artifactId>
				<version>${eden-spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ylzl</groupId>
				<artifactId>eden-mxgraph-spring-boot-starter</artifactId>
				<version>${eden-spring-boot.version}</version>
			</dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-mongobee-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-mongodb-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-mybatis-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-mycat-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-mysql-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-nacos-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-neo4j-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
			<dependency>
				<groupId>org.ylzl</groupId>
				<artifactId>eden-netty-spring-boot-starter</artifactId>
				<version>${eden-spring-boot.version}</version>
			</dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-oauth2-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-oracle-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-prometheus-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-qpid-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-rabbitmq-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-redis-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-ribbon-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-rockmq-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-shardingjdbc-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-swagger2-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-test-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-tomcat-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-truelicense-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-turbine-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-undertow-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-zipkin-server-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-zipkin-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ylzl</groupId>
                <artifactId>eden-zuul-spring-boot-starter</artifactId>
                <version>${eden-spring-boot.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>
